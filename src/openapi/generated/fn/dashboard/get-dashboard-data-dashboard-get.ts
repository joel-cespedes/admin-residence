/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';

import { DashboardData } from '../../models/dashboard-data';

export interface GetDashboardDataDashboardGet$Params {

/**
 * Time filter: week, month, or year
 */
  time_filter?: string;
  'residence-id'?: (string | null);
}

export function getDashboardDataDashboardGet(http: HttpClient, rootUrl: string, params?: GetDashboardDataDashboardGet$Params, context?: HttpContext): Observable<StrictHttpResponse<DashboardData>> {
  const rb = new RequestBuilder(rootUrl, getDashboardDataDashboardGet.PATH, 'get');
  if (params) {
    rb.query('time_filter', params.time_filter, {});
    rb.header('residence-id', params['residence-id'], {});
  }

  return http.request(
    rb.build({ responseType: 'json', accept: 'application/json', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<DashboardData>;
    })
  );
}

getDashboardDataDashboardGet.PATH = '/dashboard/';
